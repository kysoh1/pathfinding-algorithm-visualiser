{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Projects\\\\pathfinding-algorithm-visualiser\\\\src\\\\visuals\\\\elements.jsx\";\n/* This file handles most animations and visual components\r\n * including navigation side bars. */\n\nimport React from 'react';\nimport { get4NeighbourNodes, get8NeighbourNodes, getFinalPathNodes } from '../algorithms/commonFunctions';\nimport { dijkstra } from '../algorithms/dijkstra';\nimport { aStarSearch, calcManhattanDistance, calcEuclideanDistance } from '../algorithms/aStarSearch';\nimport { breadthFirstSearch } from '../algorithms/breadthFirstSearch';\nimport { depthFirstSearch } from '../algorithms/depthFirstSearch';\nimport './features.css';\nimport './navigation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Elements extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      algorithm: 'dijkstra',\n      heuristicFunc: 'manhattan',\n      connectivity: '4-connected',\n      animationSpeedFactor: 50,\n      weightValue: 10,\n      clickVisualise: true,\n      clickClearBoard: true\n    };\n    this.handleSpeedChange = this.handleSpeedChange.bind(this);\n    this.handleWeightChange = this.handleWeightChange.bind(this);\n  }\n  handleAlgorithm(event, algorithm) {\n    this.setState({\n      algorithm: algorithm\n    });\n  }\n\n  /* Node checkbox toggle */\n  handleNodeCheckboxes(id) {\n    for (let i = 0; i < 2; i++) {\n      document.getElementById(`node-checkbox-${i}`).checked = false;\n    }\n    document.getElementById(id).checked = true;\n  }\n  /* Animation speed */\n  handleSpeedChange(event) {\n    this.setState({\n      animationSpeedFactor: event.target.value\n    });\n  }\n  /* Weight value */\n  handleWeightChange(event) {\n    this.setState({\n      weightValue: event.target.value\n    });\n  }\n\n  /* Animates nodes that have been visited\r\n   * Animates shortest route after animating all visited nodes in order */\n  visualiseAlgorithm(visitedNodes, finalPathNodes) {\n    const {\n      animationSpeedFactor\n    } = this.state;\n    for (let i = 0; i < visitedNodes.length; i++) {\n      if (i < visitedNodes.length - 1) {\n        setTimeout(() => {\n          const currNode = visitedNodes[i];\n          const newClassName = document.getElementById(`node${currNode.row}-${currNode.column}`).className + ' visitedNode';\n          document.getElementById(`node${currNode.row}-${currNode.column}`).className = newClassName;\n        }, 500 * i / animationSpeedFactor);\n      } else if (i === visitedNodes.length - 1) {\n        setTimeout(() => {\n          const currNode = visitedNodes[i];\n          document.getElementById(`node${currNode.row}-${currNode.column}`).className = 'Node finishNode visitedNode';\n        }, 500 * i / animationSpeedFactor);\n        setTimeout(() => {\n          for (let i = 0; i < finalPathNodes.length; i++) {\n            setTimeout(() => {\n              const currNode = finalPathNodes[i];\n              if (i > 0 && i < finalPathNodes.length - 1) {\n                const newClassName = document.getElementById(`node${currNode.row}-${currNode.column}`).className + ' finalPathNode';\n                document.getElementById(`node${currNode.row}-${currNode.column}`).className = newClassName;\n              }\n            }, 50 * i);\n          }\n          this.props.disableNodePlacement(false);\n          this.setState({\n            clickVisualise: true\n          });\n          this.setState({\n            clickClearBoard: true\n          });\n        }, 500 * i / animationSpeedFactor);\n      }\n    }\n  }\n\n  /* Series of function calls to execute the path finding algorithm then animating it */\n  executePathfinder() {\n    //Can't visualise during an already occurring visualisation\n    if (this.state.clickVisualise) {\n      const {\n        grid,\n        startXY,\n        finishXY\n      } = this.props;\n      const {\n        algorithm,\n        connectivity,\n        weightValue\n      } = this.state;\n      this.setState({\n        clickVisualise: false\n      });\n      this.setState({\n        clickClearBoard: false\n      });\n      //Clear grid\n      this.props.resetGrid(true);\n      const startNode = grid[startXY[0]][startXY[1]];\n      const finishNode = grid[finishXY[0]][finishXY[1]];\n      let visitedNodes, finalPathNodes;\n      let getNeighbourNodes = get4NeighbourNodes;\n      connectivity === '8-connected' && (getNeighbourNodes = get8NeighbourNodes);\n      switch (algorithm) {\n        case 'dijkstra':\n          visitedNodes = dijkstra(grid, startNode, finishNode, weightValue, getNeighbourNodes);\n          finalPathNodes = getFinalPathNodes(finishNode);\n          break;\n        case 'astar-euclidean':\n          visitedNodes = aStarSearch(grid, startNode, finishNode, weightValue, calcEuclideanDistance, getNeighbourNodes);\n          finalPathNodes = getFinalPathNodes(finishNode);\n          break;\n        case 'astar-manhattan':\n          visitedNodes = aStarSearch(grid, startNode, finishNode, weightValue, calcManhattanDistance, getNeighbourNodes);\n          finalPathNodes = getFinalPathNodes(finishNode);\n          break;\n        case 'bfs':\n          visitedNodes = breadthFirstSearch(grid, startNode, finishNode, getNeighbourNodes);\n          finalPathNodes = getFinalPathNodes(finishNode);\n          break;\n        case 'dfs':\n          visitedNodes = depthFirstSearch(grid, startNode, finishNode, getNeighbourNodes);\n          finalPathNodes = getFinalPathNodes(finishNode);\n          break;\n        default:\n        //Never reaches default case\n      }\n      this.visualiseAlgorithm(visitedNodes, finalPathNodes);\n    }\n  }\n  render() {\n    //Create options for getting 4 or 8 neighbour nodes\n    const neighbourNodeItems = ['4-connected', '8-connected'];\n    const neighbourNodeCheckboxes = neighbourNodeItems.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nodeInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"nodeCheckbox\",\n            defaultChecked: this.state.connectivity === item ? true : false,\n            id: `node-checkbox-${i}`,\n            onChange: event => {\n              this.handleNodeCheckboxes(`node-checkbox-${i}`);\n              this.setState({\n                connectivity: item\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#checkbox\",\n            children: item.charAt(0).toUpperCase() + item.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#title\",\n          children: \"Visualise Pathfinding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#help\",\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropBtn\",\n            children: [\"Algorithm\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"down arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropDownContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#dijkstra\",\n              onClick: event => {\n                this.handleAlgorithm(event, 'dijkstra');\n              },\n              children: \"Dijkstra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#aStarE\",\n              onClick: event => {\n                this.handleAlgorithm(event, 'astar-euclidean');\n              },\n              children: \"A* (Euclidean)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#aStarM\",\n              onClick: event => {\n                this.handleAlgorithm(event, 'astar-manhattan');\n              },\n              children: \"A* (Manhattan)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#bfs\",\n              onClick: event => {\n                this.handleAlgorithm(event, 'bfs');\n              },\n              children: \"Breadth First Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#dfs\",\n              onClick: event => {\n                this.handleAlgorithm(event, 'dfs');\n              },\n              children: \"Depth First Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#visualion\",\n          onClick: () => {\n            this.props.disableNodePlacement(true);\n            this.executePathfinder();\n          },\n          children: \"Begin Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#clear\",\n          onClick: () => {\n            this.state.clickClearBoard && this.props.resetGrid(false);\n          },\n          children: \"Clear Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDown\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#speed\",\n            children: [\"Speed\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"right arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rangeBar\",\n            type: \"range\",\n            min: \"1\",\n            max: \"100\",\n            value: this.state.animationSpeedFactor,\n            onChange: this.handleSpeedChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDown\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#weight\",\n            children: [\"Weight\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"right arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rangeBar\",\n            type: \"range\",\n            min: \"1\",\n            max: \"100\",\n            value: this.state.weightValue,\n            onChange: this.handleWeightChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"features\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#features\",\n          children: \"Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoSegment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nodeInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon startIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"start\",\n              children: \"Start node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nodeInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon finishIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"finish\",\n              children: \"Finish node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoSegment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nodeInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"wallIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"wall\",\n              children: \"Wall node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nodeInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon weightIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"weight\",\n              children: \"Weight node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoSegment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nodeInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"visitedIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"wall\",\n              children: \"Visited node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nodeInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"finalPathIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"weight\",\n              children: \"Shortest path node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoSegment\",\n          children: neighbourNodeCheckboxes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","get4NeighbourNodes","get8NeighbourNodes","getFinalPathNodes","dijkstra","aStarSearch","calcManhattanDistance","calcEuclideanDistance","breadthFirstSearch","depthFirstSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","Elements","Component","constructor","state","algorithm","heuristicFunc","connectivity","animationSpeedFactor","weightValue","clickVisualise","clickClearBoard","handleSpeedChange","bind","handleWeightChange","handleAlgorithm","event","setState","handleNodeCheckboxes","id","i","document","getElementById","checked","target","value","visualiseAlgorithm","visitedNodes","finalPathNodes","length","setTimeout","currNode","newClassName","row","column","className","props","disableNodePlacement","executePathfinder","grid","startXY","finishXY","resetGrid","startNode","finishNode","getNeighbourNodes","render","neighbourNodeItems","neighbourNodeCheckboxes","map","item","children","type","defaultChecked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","href","charAt","toUpperCase","slice","onClick","min","max"],"sources":["D:/Coding Projects/pathfinding-algorithm-visualiser/src/visuals/elements.jsx"],"sourcesContent":["/* This file handles most animations and visual components\r\n * including navigation side bars. */\r\n\r\nimport React from 'react';\r\nimport { get4NeighbourNodes, get8NeighbourNodes, getFinalPathNodes } from '../algorithms/commonFunctions';\r\nimport { dijkstra } from '../algorithms/dijkstra';\r\nimport { aStarSearch, calcManhattanDistance, calcEuclideanDistance } from '../algorithms/aStarSearch';\r\nimport { breadthFirstSearch } from '../algorithms/breadthFirstSearch';\r\nimport { depthFirstSearch } from '../algorithms/depthFirstSearch';\r\nimport './features.css';\r\nimport './navigation.css'\r\n\r\nexport class Elements extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            algorithm: 'dijkstra',\r\n            heuristicFunc: 'manhattan',\r\n            connectivity: '4-connected',\r\n            animationSpeedFactor: 50,\r\n            weightValue: 10,\r\n            clickVisualise: true,\r\n            clickClearBoard: true\r\n        };\r\n\r\n        this.handleSpeedChange = this.handleSpeedChange.bind(this);\r\n        this.handleWeightChange = this.handleWeightChange.bind(this);\r\n    }\r\n\r\n    handleAlgorithm(event, algorithm) {\r\n        this.setState({ algorithm: algorithm });\r\n    }\r\n\r\n    /* Node checkbox toggle */\r\n    handleNodeCheckboxes(id) {\r\n        for(let i = 0; i < 2; i++) {\r\n            document.getElementById(`node-checkbox-${i}`).checked = false;\r\n        }\r\n\r\n        document.getElementById(id).checked = true;\r\n    }\r\n    /* Animation speed */\r\n    handleSpeedChange(event) {\r\n        this.setState({ animationSpeedFactor: event.target.value });\r\n    }\r\n    /* Weight value */\r\n    handleWeightChange(event) {\r\n        this.setState({ weightValue: event.target.value });\r\n    }\r\n\r\n    /* Animates nodes that have been visited\r\n     * Animates shortest route after animating all visited nodes in order */\r\n    visualiseAlgorithm(visitedNodes, finalPathNodes) {\r\n        const { animationSpeedFactor } = this.state;\r\n        for (let i = 0; i < visitedNodes.length; i++) {\r\n            if (i < visitedNodes.length - 1) {\r\n                setTimeout(() => {\r\n                    const currNode = visitedNodes[i];\r\n                    const newClassName = document.getElementById(`node${currNode.row}-${currNode.column}`).className + ' visitedNode';\r\n                    document.getElementById(`node${currNode.row}-${currNode.column}`).className = newClassName;\r\n                }, 500 * i / animationSpeedFactor);\r\n            } else if (i === visitedNodes.length - 1) {\r\n                setTimeout(() => {\r\n                    const currNode = visitedNodes[i];\r\n                    document.getElementById(`node${currNode.row}-${currNode.column}`).className =\r\n                    'Node finishNode visitedNode';\r\n                }, 500 * i / animationSpeedFactor);\r\n\r\n                setTimeout(() => {\r\n                    for (let i = 0; i < finalPathNodes.length; i++) {\r\n                        setTimeout(() => {\r\n                            const currNode = finalPathNodes[i];\r\n                            if (i > 0 && i < finalPathNodes.length - 1) {\r\n                                const newClassName = document.getElementById(`node${currNode.row}-${currNode.column}`).className + ' finalPathNode';\r\n                                document.getElementById(`node${currNode.row}-${currNode.column}`).className = newClassName;\r\n                            }\r\n                        }, 50 * i);\r\n                    }\r\n                    \r\n                    this.props.disableNodePlacement(false);\r\n                    this.setState({ clickVisualise: true });\r\n                    this.setState({ clickClearBoard: true });\r\n                }, 500 * i / animationSpeedFactor);\r\n            }\r\n        }\r\n    } \r\n\r\n    /* Series of function calls to execute the path finding algorithm then animating it */\r\n    executePathfinder() {\r\n        //Can't visualise during an already occurring visualisation\r\n        if (this.state.clickVisualise) {\r\n            const { grid, startXY, finishXY } = this.props;\r\n            const { algorithm, connectivity, weightValue } = this.state;\r\n            this.setState({ clickVisualise: false })\r\n            this.setState({ clickClearBoard: false })\r\n            //Clear grid\r\n            this.props.resetGrid(true);\r\n            const startNode = grid[startXY[0]][startXY[1]];\r\n            const finishNode = grid[finishXY[0]][finishXY[1]];\r\n            let visitedNodes, finalPathNodes;\r\n            let getNeighbourNodes = get4NeighbourNodes;\r\n            connectivity === '8-connected' && (getNeighbourNodes = get8NeighbourNodes);\r\n\r\n            switch(algorithm) {\r\n                case 'dijkstra':\r\n                    visitedNodes = dijkstra(grid, startNode, finishNode, weightValue, getNeighbourNodes);\r\n                    finalPathNodes = getFinalPathNodes(finishNode);\r\n                    break;\r\n                case 'astar-euclidean':\r\n                    visitedNodes = aStarSearch(grid, startNode, finishNode, weightValue, calcEuclideanDistance, getNeighbourNodes);\r\n                    finalPathNodes = getFinalPathNodes(finishNode);\r\n                    break;\r\n                case 'astar-manhattan':\r\n                    visitedNodes = aStarSearch(grid, startNode, finishNode, weightValue, calcManhattanDistance, getNeighbourNodes);\r\n                    finalPathNodes = getFinalPathNodes(finishNode);\r\n                    break;\r\n                case 'bfs':\r\n                    visitedNodes = breadthFirstSearch(grid, startNode, finishNode, getNeighbourNodes);\r\n                    finalPathNodes = getFinalPathNodes(finishNode);\r\n                    break;\r\n                case 'dfs':\r\n                    visitedNodes = depthFirstSearch(grid, startNode, finishNode, getNeighbourNodes);\r\n                    finalPathNodes = getFinalPathNodes(finishNode);\r\n                    break;\r\n                default:\r\n                    //Never reaches default case\r\n            }\r\n\r\n            this.visualiseAlgorithm(visitedNodes, finalPathNodes);\r\n        }\r\n    } \r\n\r\n    render() {\r\n        //Create options for getting 4 or 8 neighbour nodes\r\n        const neighbourNodeItems = ['4-connected', '8-connected'];\r\n        const neighbourNodeCheckboxes = neighbourNodeItems.map((item, i) => {\r\n            return <>\r\n                <div className='nodeInfo'>\r\n                    <input type='checkbox' className='nodeCheckbox' defaultChecked={this.state.connectivity === item ? true : false} id={`node-checkbox-${i}`} onChange={(event) => { \r\n                        this.handleNodeCheckboxes(`node-checkbox-${i}`); \r\n                        this.setState({ connectivity: item }); }}/>\r\n                    <a href='#checkbox'>{item.charAt(0).toUpperCase() + item.slice(1)}</a>\r\n                </div>\r\n            </>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className='navBar'>\r\n                    <a href='#title'>Visualise Pathfinding</a>\r\n                    <a href='#help'>Help</a>\r\n                    <div className='dropDown'>\r\n                        <button className='dropBtn'>Algorithm\r\n                            <i className='down arrow'></i>\r\n                        </button>\r\n                        <div className='dropDownContent'>\r\n                            <a href='#dijkstra' onClick={(event) => { this.handleAlgorithm(event, 'dijkstra'); }}>Dijkstra</a>\r\n                            <a href='#aStarE' onClick={(event) => { this.handleAlgorithm(event, 'astar-euclidean'); }}>A* (Euclidean)</a>\r\n                            <a href='#aStarM' onClick={(event) => { this.handleAlgorithm(event, 'astar-manhattan'); }}>A* (Manhattan)</a>\r\n                            <a href='#bfs' onClick={(event) => { this.handleAlgorithm(event, 'bfs');}}>Breadth First Search</a>\r\n                            <a href='#dfs' onClick={(event) => { this.handleAlgorithm(event, 'dfs'); }}>Depth First Search</a>\r\n                        </div>\r\n                    </div>\r\n                    <a href='#visualion' onClick={() => { \r\n                        this.props.disableNodePlacement(true); \r\n                        this.executePathfinder(); }}>\r\n                        Begin Search\r\n                    </a>\r\n                    <a href='#clear' onClick={() => { this.state.clickClearBoard && this.props.resetGrid(false); }}>\r\n                        Clear Board\r\n                    </a>\r\n                    <div className='dropDown'>\r\n                        <a href='#speed'>\r\n                            Speed\r\n                            <i className='right arrow'></i>\r\n                        </a>\r\n                        <input className='rangeBar' type='range' min='1' max='100' \r\n                            value={this.state.animationSpeedFactor} \r\n                            onChange={this.handleSpeedChange} /> \r\n                    </div>\r\n                    <div className='dropDown'>\r\n                        <a href='#weight'>\r\n                            Weight\r\n                            <i className='right arrow'></i>\r\n                        </a>\r\n                        <input className='rangeBar' type='range' min='1' max='100' \r\n                            value={this.state.weightValue} \r\n                            onChange={this.handleWeightChange} />\r\n                    </div>\r\n                </div>\r\n                <div className='features'>\r\n                    <a href='#features'>Features</a>\r\n                    <div className='divider'></div>    \r\n                    <div className='infoSegment'>\r\n                        <div className='nodeInfo'>\r\n                            <i className='icon startIcon'></i>\r\n                            <a href='start'>Start node</a>\r\n                        </div>\r\n                        <div className='nodeInfo'>\r\n                            <i className='icon finishIcon'></i>\r\n                            <a href='finish'>Finish node</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='infoSegment'>\r\n                        <div className='nodeInfo'>\r\n                            <i className='wallIcon'></i>\r\n                            <a href='wall'>Wall node</a>\r\n                        </div>\r\n                        <div className='nodeInfo'>\r\n                            <i className='icon weightIcon'></i>\r\n                            <a href='weight'>Weight node</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='infoSegment'>\r\n                        <div className='nodeInfo'>\r\n                            <i className='visitedIcon'></i>\r\n                            <a href='wall'>Visited node</a>\r\n                        </div>\r\n                        <div className='nodeInfo'>\r\n                            <i className='finalPathIcon'></i>\r\n                            <a href='weight'>Shortest path node</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='divider'></div>\r\n                    <div className='infoSegment'>\r\n                        {neighbourNodeCheckboxes}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}